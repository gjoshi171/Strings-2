//time complexity : O(m)+O(n)
//space complexity: O(m)
class FindAllAnagramsInString {

    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> result = new ArrayList<>();
        int n = s.length();
        int m = p.length();

        HashMap<Character, Integer> map = new HashMap<>();
       
        for(int i =0; i< m; i++){
             char patternChar= p.charAt(i);
            map.put(patternChar, map.getOrDefault(patternChar,0)+1);
        }
        
         int match=0;
         for(int i=0; i<n; i++){
             char in = s.charAt(i);
             if(map.containsKey(in)){
               int count= map.get(in);
                count--;
                
                if(count==0){
                    match++;
                }

                map.put(in, count);
             }

            //out
             if(i>=m){
                 char out= s.charAt(i-m);
                 if(map.containsKey(out)){
                 int count= map.get(out);
                 count++;

                 if(count==1){
                     match--;
                 }
                 map.put(out, count);
                }
             }
             if(map.size()==match){
                result.add(i-m+1);
             }
         
         }
         return result;
         
    }
} 
